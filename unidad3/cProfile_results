         400080 function calls in 0.711 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.711    0.711 {built-in method builtins.exec}
        1    0.000    0.000    0.711    0.711 <string>:1(<module>)
        1    0.290    0.290    0.711    0.711 <ipython-input-7-05eeb35abb59>:9(slow_function)
    10000    0.013    0.000    0.212    0.000 fromnumeric.py:3250(var)
    10000    0.120    0.000    0.199    0.000 _methods.py:91(_var)
    20000    0.025    0.000    0.171    0.000 fromnumeric.py:3014(mean)
    20000    0.049    0.000    0.146    0.000 _methods.py:58(_mean)
    40001    0.098    0.000    0.098    0.000 {method 'reduce' of 'numpy.ufunc' objects}
    30000    0.034    0.000    0.037    0.000 _methods.py:48(_count_reduce_items)
    20000    0.034    0.000    0.034    0.000 {built-in method numpy.dot}
    40004    0.010    0.000    0.018    0.000 numeric.py:541(asanyarray)
    70000    0.009    0.000    0.009    0.000 {built-in method builtins.isinstance}
    40007    0.009    0.000    0.009    0.000 {built-in method numpy.array}
    60003    0.006    0.000    0.006    0.000 {built-in method builtins.issubclass}
    30001    0.006    0.000    0.006    0.000 {built-in method builtins.hasattr}
    10000    0.004    0.000    0.004    0.000 {built-in method builtins.max}
        1    0.001    0.001    0.001    0.001 <ipython-input-7-05eeb35abb59>:11(<listcomp>)
        1    0.000    0.000    0.001    0.001 linalg.py:1864(pinv)
        1    0.000    0.000    0.001    0.001 shape_base.py:229(vstack)
        1    0.001    0.001    0.001    0.001 {built-in method numpy.concatenate}
        1    0.000    0.000    0.001    0.001 linalg.py:1468(svd)
        2    0.001    0.000    0.001    0.000 {built-in method numpy.zeros}
        1    0.000    0.000    0.000    0.000 shape_base.py:283(<listcomp>)
        4    0.000    0.000    0.000    0.000 shape_base.py:83(atleast_2d)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:2397(amax)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:69(_wrapreduction)
        1    0.000    0.000    0.000    0.000 linalg.py:144(_commonType)
        2    0.000    0.000    0.000    0.000 linalg.py:116(_makearray)
        1    0.000    0.000    0.000    0.000 shape_base.py:220(_warn_for_nonsequence)
        2    0.000    0.000    0.000    0.000 linalg.py:229(transpose)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:541(swapaxes)
        3    0.000    0.000    0.000    0.000 numeric.py:469(asarray)
        1    0.000    0.000    0.000    0.000 shape_base.py:209(_arrays_for_stack_dispatcher)
        1    0.000    0.000    0.000    0.000 linalg.py:111(get_linalg_error_extobj)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:54(_wrapfunc)
        2    0.000    0.000    0.000    0.000 linalg.py:134(_realType)
        3    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 fromnumeric.py:70(<dictcomp>)
        2    0.000    0.000    0.000    0.000 {method 'swapaxes' of 'numpy.ndarray' objects}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        2    0.000    0.000    0.000    0.000 linalg.py:121(isComplexType)
        4    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 linalg.py:203(_assertRankAtLeast2)
        1    0.000    0.000    0.000    0.000 linalg.py:220(_isEmpty2d)
        2    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        3    0.000    0.000    0.000    0.000 {method '__array_prepare__' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'conjugate' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}